{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/serials-table.service.ts","./src/app/shared/serials-table/serials-table.component.ts","./src/app/shared/serials-table/serials-table.component.html","./src/app/shared/serials.datasourse.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<div class=\"container\">\n  <app-serials-table></app-serials-table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ISerials } from './serials.model';\nimport { ISerialsFilters } from './serialsFilters.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SerialsTableService {\n\n  constructor(private http: HttpClient) { }\n\n  public getSerials(filters: ISerialsFilters, pageNumber: number, pageSize: number): Observable<ISerials[]> {\n    return this.http.get<ISerials[]>('assets/data/serials.json').pipe(\n      map((data) => {\n        if (filters.nameSearch) {\n          data = data.filter((seria) => seria.name.trim().toLowerCase().search(filters.nameSearch.toLowerCase()) >= 0);\n       }\n        if (filters.genre) {\n        data = data.filter((seria) => seria.genres.join().toLowerCase().search(filters.genre.toLowerCase()) >= 0);\n       }\n        if (filters.year) {\n        data = data.filter((seria) => seria.premiere.search(filters.year) >= 0);\n       }\n\n        if (filters.sort === 'desc') {\n        data = data.reverse();\n        }\n\n        const initialPos = pageNumber * pageSize;\n        data = data.slice(initialPos, initialPos + pageSize);\n        return data;\n      })\n    );\n  }\n\n  public getAmountSerials(filters: ISerialsFilters): Observable<number> {\n    return this.http.get<ISerials[]>('assets/data/serials.json').pipe(\n      map((data) => {\n        if (filters.nameSearch) {\n          data = data.filter((seria) => seria.name.trim().toLowerCase().search(filters.nameSearch.toLowerCase()) >= 0);\n       }\n        if (filters.genre) {\n        data = data.filter((seria) => seria.genres.join().toLowerCase().search(filters.genre.toLowerCase()) >= 0);\n       }\n        if (filters.year) {\n        data = data.filter((seria) => seria.premiere.search(filters.year) >= 0);\n       }\n        return data.length;\n      })\n    );\n  }\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatSelectChange } from '@angular/material/select';\nimport { Sort } from '@angular/material/sort';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { SerialsTableService } from '../serials-table.service';\nimport { SerialsDataSource } from '../serials.datasourse';\nimport { ISerialsFilters } from '../serialsFilters.model';\n\n@Component({\n  selector: 'app-serials-table',\n  templateUrl: './serials-table.component.html',\n  styleUrls: ['./serials-table.component.scss']\n})\nexport class SerialsTableComponent implements OnInit, AfterViewInit {\n\n  public displayedColumns: string[] = ['name', 'season', 'network', 'premiere'];\n  public dataSource: SerialsDataSource;\n\n  @ViewChild(MatPaginator, { static: true }) public paginator: MatPaginator;\n  @ViewChild('input', { static: true }) public input: ElementRef;\n  private filters: ISerialsFilters;\n\n  constructor(private _serialTableService: SerialsTableService) {\n    this.filters = {} as ISerialsFilters;\n    this.filters.nameSearch = '';\n    this.filters.genre = '';\n    this.filters.year = '';\n    this.filters.sort = '';\n   }\n  public getColor(genre: string): string {\n    let result = 'dark-item';\n    switch (genre) {\n      case 'drama':\n        result = 'light-purple-item';\n        break;\n      case 'crime':\n        result = 'purple-item';\n        break;\n        case 'tragedy':\n        result = 'red-item';\n        break;\n        case 'dark comedy':\n        result = 'light-dark-item';\n        break;\n      }\n    return result;\n  }\n\n  public ngOnInit() {\n    this.dataSource = new SerialsDataSource(this._serialTableService);\n    this.dataSource.loadSerials(this.filters);\n  }\n\n  public ngAfterViewInit() {\n    fromEvent(this.input.nativeElement, 'keyup')\n            .pipe(\n                debounceTime(150),\n                distinctUntilChanged(),\n                tap(() => {\n                  this.filters.nameSearch = this.input.nativeElement.value;\n                  if (this.paginator) {\n                   this.paginator.pageIndex = 0;\n                  }\n\n                  this.dataSource.loadSerials(this.filters);\n                })\n            )\n            .subscribe();\n  }\n\n  public onChangePage(event: PageEvent) {\n    this.dataSource.loadSerials(this.filters, event.pageIndex, event.pageSize);\n  }\n  public onChangeGenre(event: MatSelectChange) {\n    this.filters.genre = event.value;\n    this.dataSource.loadSerials( this.filters);\n  }\n  public  onChangePremYear(event: MatSelectChange) {\n    this.filters.year = event.value;\n    this.dataSource.loadSerials( this.filters);\n  }\n  public sortData(event: Sort) {\n    this.filters.sort = event.direction;\n    this.dataSource.loadSerials( this.filters);\n  }\n}\n","<div class=\"filters\">\n  <mat-form-field>\n    <mat-label>Name</mat-label>\n    <input matInput #input placeholder=\"Поиск\">\n    <mat-icon matSuffix\n                  class=\"insurance--gray\"\n                  *ngIf=\"true\">search</mat-icon>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Genre</mat-label>\n    <mat-select (selectionChange)=\"onChangeGenre($event)\">\n      <mat-option value=\"\">None</mat-option>\n      <mat-option value=\"horror\">Horror</mat-option>\n      <mat-option value=\"drama\">Drama</mat-option>\n      <mat-option value=\"crime\">Crime</mat-option>\n      <mat-option value=\"tragedy\">Tragedy</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Premiere Year</mat-label>\n    <mat-select (selectionChange)=\"onChangePremYear($event)\">\n      <mat-option value=\"\">None</mat-option>\n      <mat-option value=\"2020\">2020</mat-option>\n      <mat-option value=\"2019\">2019</mat-option>\n      <mat-option value=\"2018\">2018</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<table mat-table\n       [dataSource]=\"dataSource\"\n       matSort\n       (matSortChange)=\"sortData($event)\"\n       class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n    <td mat-cell *matCellDef=\"let element\">\n      {{element.name}}\n      <div class=\"genre\">\n        <div *ngFor=\"let genre of element.genres\" [ngClass]=\"getColor(genre)\">{{genre}}</div>\n      </div>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"season\">\n    <th mat-header-cell *matHeaderCellDef> Season </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.season}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"network\">\n    <th mat-header-cell *matHeaderCellDef> Network </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.network}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"premiere\">\n    <th mat-header-cell *matHeaderCellDef> Premiere </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.premiere}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr> -->\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<div *ngIf=\"dataSource.maxLength\">\n  <mat-paginator class=\"paginator\"\n               [length]=\"dataSource.maxLength\"\n               [pageSize]=\"5\"\n               [pageSizeOptions]=\"[5, 10, 15]\"\n               (page)=\"onChangePage($event)\"></mat-paginator>\n\n</div>\n","import { CollectionViewer } from '@angular/cdk/collections';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { SerialsTableService } from './serials-table.service';\r\nimport { ISerials } from './serials.model';\r\nimport { ISerialsFilters } from './serialsFilters.model';\r\n\r\nexport class SerialsDataSource implements DataSource<ISerials> {\r\n    public maxLength: number;\r\n\r\n    private serialsSubject = new BehaviorSubject<ISerials[]>([]);\r\n\r\n    constructor(private _serialTableService: SerialsTableService) {\r\n    }\r\n\r\n    public loadSerials(filters: ISerialsFilters, pageIndex: number = 0, pageSize: number = 5) {\r\n        this._serialTableService.getSerials(filters, pageIndex, pageSize)\r\n        .subscribe((data) => this.serialsSubject.next(data));\r\n\r\n        this._serialTableService.getAmountSerials(filters).subscribe((amount) => this.maxLength = amount);\r\n    }\r\n\r\n    public connect(collectionViewer: CollectionViewer): Observable<ISerials[]> {\r\n        return this.serialsSubject.asObservable();\r\n    }\r\n\r\n    public disconnect(collectionViewer: CollectionViewer): void {\r\n        this.serialsSubject.complete();\r\n    }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SerialsTableComponent } from './serials-table/serials-table.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatSortModule } from '@angular/material/sort';\n\n@NgModule({\n  declarations: [\n    SerialsTableComponent,\n    ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule\n  ],\n  exports: [\n    SerialsTableComponent,\n    ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}